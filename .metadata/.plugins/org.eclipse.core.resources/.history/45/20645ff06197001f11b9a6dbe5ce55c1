package com.office.library.book.user;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;

import com.office.library.book.BookVo;

@Component
public class BookDao {
	
	@Autowired
	JdbcTemplate jdbcTemplate;
	
	public List<BookVo> selectBookBySearch(BookVo bookVo) {
		System.out.println("[BookDao] selectBookBySearch()");
		
		String sql = "SELECT * FroM tbl_book "
					+ "WHERE b_name LIKE ? "
					+ "ORDER BY b_no DESC";
		
		List<BookVo> bookVos = null;
		
		try {
			bookVos = jdbcTemplate.query(sql, new  RowMapper<BookVo>() {
				
				@Override
				public BookVo mapRow(ResultSet rs, int rowNum) throws
SQLException {
					BookVo bookVo = new BookVo();
					
					bookVo.setB_no(rs.getInt("b_no"));
					bookVo.setB_thumbnail(rs.getString("b_thumbnail"));
					bookVo.setB_name(rs.getString("b_name"));
					bookVo.setB_author(rs.getString("b_author"));
					bookVo.setB_publisher(rs.getString("b_publisher"));
					bookVo.setB_publish_year(rs.getString("b_publish_year"));
					bookVo.setB_isbn(rs.getString("b_isbn"));
					bookVo.setB_call_number(rs.getString("b_call_number"));
					bookVo.setB_rantal_able(rs.getInt("b_rantal_able"));
					bookVo.setB_reg_date(rs.getString("b_reg_date"));
					bookVo.setB_mod_date(rs.getString("b_mod_date"));
					
					return bookVo;
				}
			}, "%" + bookVo.getB_name() + "%");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return bookVos.size() > 0 ? bookVos : null;
	}
	
	public BookVo selectBook(int b_no) {
		System.out.println("[BookDao] selectBook()");

		String sql = "SELECT * FROM tbl_book WHERE b_no = ?";

		 List<BookVo> bookVos = null;
		 
		 try {
			 bookVos = jdbcTemplate.query(sql, new RowMapper<BookVo>() {
				 
				 @Override
				 public BookVo mapRow(ResultSet rs, int rowNum) throws
SQLException {
					 BookVo bookVo = new BookVo();
					 
					 bookVo.setB_no(rs.getInt("b_no"));
						bookVo.setB_thumbnail(rs.getString("b_thumbnail"));
						bookVo.setB_name(rs.getString("b_name"));
						bookVo.setB_author(rs.getString("b_author"));
						bookVo.setB_publisher(rs.getString("b_publisher"));
						bookVo.setB_publish_year(rs.getString("b_publish_year"));
						bookVo.setB_isbn(rs.getString("b_isbn"));
						bookVo.setB_call_number(rs.getString("b_call_number"));
						bookVo.setB_rantal_able(rs.getInt("b_rantal_able"));
						bookVo.setB_reg_date(rs.getString("b_reg_date"));
						bookVo.setB_mod_date(rs.getString("b_mod_date"));
						
						return bookVo;
					}
				}, b_no);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return bookVos.size() > 0 ? bookVos.get(0) : null ;
				 }
	
	public int insertRentalBook(int b_no, int u_m_no) {
		System.out.println("[BookDao] insertRentalBook()");
		
		String sql = "INSERT INTO tbl_rental_book(b_no, u_m_no, rb_start_date, rb_reg_date, rb_mod_date) "
					+ "VALUES(?, ?, NOW(), NOW(), NOW())";
		
		int result = -1;
		
		try {
			result = jdbcTemplate.update(sql, b_no, u_m_no);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	public void updateRentalBookAble(int b_no) {
		System.out.println("[BookDao] updateRenntalBookAble()");
		
		String sql = "UPDATE tble_book "
					+ "SET b_rental_able = 0 "
					+ "WHERE b_no = ?";
		
		try {
			jdbcTemplate.update(sql, b_no);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
}
